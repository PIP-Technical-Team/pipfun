[{"path":"https://pip-technical-team.github.io/pipfun/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 pipfun authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://pip-technical-team.github.io/pipfun/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"R.Andres Castaneda. Author, maintainer.","code":""},{"path":"https://pip-technical-team.github.io/pipfun/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Castaneda R (2022). pipfun: Package (One Line, Title Case). R package version 0.0.0.9001, https://pip-technical-team.github.io/pipfun/.","code":"@Manual{,   title = {pipfun: What the Package Does (One Line, Title Case)},   author = {R.Andres Castaneda},   year = {2022},   note = {R package version 0.0.0.9001},   url = {https://pip-technical-team.github.io/pipfun/}, }"},{"path":"https://pip-technical-team.github.io/pipfun/index.html","id":"pipfun","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal pipfun …","code":""},{"path":"https://pip-technical-team.github.io/pipfun/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version pipfun GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"PIP-Technical-Team/pipfun\")"},{"path":"https://pip-technical-team.github.io/pipfun/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"What the Package Does (One Line, Title Case)","text":"basic example shows solve common problem:","code":"library(pipfun) ## basic example code"},{"path":"https://pip-technical-team.github.io/pipfun/index.html","id":"saving-files","dir":"","previous_headings":"Examples","what":"Saving files","title":"What the Package Does (One Line, Title Case)","text":"Save list Save data-frame","code":"tdir <- fs::path_temp(\"pipfun-l\")    lx <- list(x = 1)   measure <- \"ltst\"    pip_sign_save(x = lx,               measure = measure,               msrdir = tdir,               save_dta = TRUE) #> ! Data signature has changed #> 'ltst.rds' has been updated      fs::dir_tree(tdir) #> C:/Users/wb384996/AppData/Local/Temp/Rtmp6ZvPdM/pipfun-l #> +-- ltst.qs #> +-- ltst.rds #> +-- ltst_datasignature.txt #> \\-- _vintage #>     +-- ltst_20220808152338.qs #>     \\-- ltst_20220808152338.rds   fs::dir_delete(tdir) tdir <- fs::path_temp(\"pipfun-df\")    lx <- data.frame(x = 1)   measure <- \"ltst\"    pip_sign_save(x = lx,               measure = measure,               msrdir = tdir,               save_dta = TRUE) #> Warning: package 'fstcore' was built under R version 4.1.3 #> ! Data signature has changed #> 'ltst.fst' has been updated      fs::dir_tree(tdir) #> C:/Users/wb384996/AppData/Local/Temp/Rtmp6ZvPdM/pipfun-df #> +-- ltst.dta #> +-- ltst.fst #> +-- ltst.qs #> +-- ltst_datasignature.txt #> \\-- _vintage #>     +-- ltst_20220808152338.dta #>     +-- ltst_20220808152338.fst #>     \\-- ltst_20220808152338.qs   fs::dir_delete(tdir)"},{"path":"https://pip-technical-team.github.io/pipfun/reference/check_and_create.html","id":null,"dir":"Reference","previous_headings":"","what":"check vintage version and create — check_and_create","title":"check vintage version and create — check_and_create","text":"check vintage version create","code":""},{"path":"https://pip-technical-team.github.io/pipfun/reference/check_and_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check vintage version and create — check_and_create","text":"","code":"check_and_create(   dir,   vintage,   DATE = format(Sys.Date(), \"%Y%m%d\"),   clean,   verbose,   create_dir )"},{"path":"https://pip-technical-team.github.io/pipfun/reference/check_and_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check vintage version and create — check_and_create","text":"dir character: output directory vintage character: name output folder. \"latest\", \"new\", name. \"latest\" (default), recent version available vintage directory form \"%Y%m%d\" used. \"new\", new folder name form \"%Y%m%d\" created. names coerced lower cases DATE character: date form \"%Y%m%d\" clean logical: TRUE cleans empty directories created mistake. Default FALSE. verbose logical: display messages. Default getOption(\"pipfun.verbose\") create_dir logical: TRUE creates output directory directory part returned global exist. Otherwise just returns directory path even  directory exist","code":""},{"path":"https://pip-technical-team.github.io/pipfun/reference/create_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if path is fs_path and then create folder — create_dir","title":"Check if path is fs_path and then create folder — create_dir","text":"Check path fs_path create folder","code":""},{"path":"https://pip-technical-team.github.io/pipfun/reference/create_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if path is fs_path and then create folder — create_dir","text":"","code":"create_dir(glbs)"},{"path":"https://pip-technical-team.github.io/pipfun/reference/create_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if path is fs_path and then create folder — create_dir","text":"glbs list object. fs_paths","code":""},{"path":"https://pip-technical-team.github.io/pipfun/reference/load_from_gh.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Raw Auxiliary data — load_from_gh","title":"Load Raw Auxiliary data — load_from_gh","text":"Load Raw Auxiliary data","code":""},{"path":"https://pip-technical-team.github.io/pipfun/reference/load_from_gh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Raw Auxiliary data — load_from_gh","text":"","code":"load_from_gh(   measure,   owner = getOption(\"pipfun.ghowner\"),   repo = paste0(\"aux_\", measure),   branch = c(\"DEV\", \"PROD\", \"main\"),   tag = match.arg(branch),   filename = measure,   ext = \"csv\",   ... )"},{"path":"https://pip-technical-team.github.io/pipfun/reference/load_from_gh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Raw Auxiliary data — load_from_gh","text":"measure character: measure loaded owner character: Github repo owner. Default getOption(\"pipfun.ghowner\") repo character: name repo branch character: either \"DEV\" \"PROD\". Refers branch used update either development server production. tag character: specific release used update. filename character: Name file name without \".csv\" extension. Default measure ext character: Extension filename. Default \"csv\" ... parameters passed loading functions depending extension used","code":""},{"path":"https://pip-technical-team.github.io/pipfun/reference/load_from_gh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Raw Auxiliary data — load_from_gh","text":"dataset","code":""},{"path":"https://pip-technical-team.github.io/pipfun/reference/pip_create_globals.html","id":null,"dir":"Reference","previous_headings":"","what":"Create global variables for PIP data management — pip_create_globals","title":"Create global variables for PIP data management — pip_create_globals","text":"Create global variables PIP data management","code":""},{"path":"https://pip-technical-team.github.io/pipfun/reference/pip_create_globals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create global variables for PIP data management — pip_create_globals","text":"","code":"pip_create_globals(   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   out_dir = root_dir,   vintage = NULL,   clean = FALSE,   verbose = getOption(\"pipfun.verbose\"),   create_dir = FALSE )"},{"path":"https://pip-technical-team.github.io/pipfun/reference/pip_create_globals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create global variables for PIP data management — pip_create_globals","text":"root_dir character: root directory PIP data out_dir character: Output Directory. Default root_dir vintage character: name output folder. \"latest\", \"new\", name. \"latest\" (default), recent version available vintage directory form \"%Y%m%d\" used. \"new\", new folder name form \"%Y%m%d\" created. names coerced lower cases clean logical: TRUE cleans empty directories created mistake. Default FALSE. verbose logical: display messages. Default getOption(\"pipfun.verbose\") create_dir logical: TRUE creates output directory directory part returned global exist. Otherwise just returns directory path even  directory exist","code":""},{"path":"https://pip-technical-team.github.io/pipfun/reference/pip_create_globals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create global variables for PIP data management — pip_create_globals","text":"list","code":""},{"path":"https://pip-technical-team.github.io/pipfun/reference/pip_create_globals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create global variables for PIP data management — pip_create_globals","text":"","code":"if (FALSE) { pip_create_globals() }"},{"path":"https://pip-technical-team.github.io/pipfun/reference/pip_create_vintage.html","id":null,"dir":"Reference","previous_headings":"","what":"Create output directory name — pip_create_vintage","title":"Create output directory name — pip_create_vintage","text":"function creates name directory used vintage control PIP project.","code":""},{"path":"https://pip-technical-team.github.io/pipfun/reference/pip_create_vintage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create output directory name — pip_create_vintage","text":"","code":"pip_create_vintage(   vintage = list(),   DATE = format(Sys.Date(), \"%Y%m%d\"),   owner = getOption(\"pipfun.ghowner\"),   branch = c(\"DEV\", \"PROD\", \"main\"),   tag = match.arg(branch) )"},{"path":"https://pip-technical-team.github.io/pipfun/reference/pip_create_vintage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create output directory name — pip_create_vintage","text":"vintage list character: list, objects named following names accepted: c(\"release\", \"ppp_year\", \"ppp_rv\", \"ppp_av\", \"identity\"). Alternatively, single-object list called \"names\" like vintage = list(name = \"some_name\").  character, length equal 1. DATE character: date form %y%m%d. owner character: Github repo owner. Default getOption(\"pipfun.ghowner\") branch character: either \"DEV\" \"PROD\". Refers branch used update either development server production. tag character: specific release used update.","code":""},{"path":"https://pip-technical-team.github.io/pipfun/reference/pip_create_vintage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create output directory name — pip_create_vintage","text":"character  form \"%Y%m%d_YYYY_##_##_SSS\"","code":""},{"path":"https://pip-technical-team.github.io/pipfun/reference/pip_sign_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save PIP  data — pip_sign_save","title":"Save PIP  data — pip_sign_save","text":"Save PIP  data data signature.","code":""},{"path":"https://pip-technical-team.github.io/pipfun/reference/pip_sign_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save PIP  data — pip_sign_save","text":"","code":"pip_sign_save(x, measure, msrdir, force = FALSE, save_dta = TRUE)"},{"path":"https://pip-technical-team.github.io/pipfun/reference/pip_sign_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save PIP  data — pip_sign_save","text":"x data.frame Data frame signed saved. measure character: Measure used. e.g., \"cpi\" \"ppp\". msrdir character: Directory data data signature saved. force logical: TRUE data overwritten. save_dta logical: TRUE Stata (.dta) version dataset also saved.","code":""},{"path":"https://pip-technical-team.github.io/pipfun/reference/pip_sign_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save PIP  data — pip_sign_save","text":"logical","code":""},{"path":"https://pip-technical-team.github.io/pipfun/reference/pipfun.html","id":null,"dir":"Reference","previous_headings":"","what":"pipfun: A common place for crossed-packages functions in PIP — pipfun","title":"pipfun: A common place for crossed-packages functions in PIP — pipfun","text":"Description functions use different packages across PIP project","code":""},{"path":"https://pip-technical-team.github.io/pipfun/reference/pipfun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pipfun: A common place for crossed-packages functions in PIP — pipfun","text":"","code":".datatable.aware"},{"path":"https://pip-technical-team.github.io/pipfun/reference/pipfun.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"pipfun: A common place for crossed-packages functions in PIP — pipfun","text":"object class logical length 1.","code":""},{"path":"https://pip-technical-team.github.io/pipfun/reference/pipfun.html","id":"pipfun-functions","dir":"Reference","previous_headings":"","what":"pipfun functions","title":"pipfun: A common place for crossed-packages functions in PIP — pipfun","text":"pipfun functions ...","code":""}]
