% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/branch_management.R
\name{create_new_brach}
\alias{create_new_brach}
\title{Create new branch in repo}
\usage{
create_new_brach(
  measure = NULL,
  owner = getOption("pipfun.ghowner"),
  repo = ifelse(is.null(measure), NA, paste0("aux_", measure)),
  new_release = format(Sys.Date(), "\%Y\%m\%d"),
  identity = c("PROD", "INT", "TEST"),
  ref_branch = "DEV",
  new_branch = paste0(new_release, "_", identity[1]),
  verbose = getOption("pipfun.verbose")
)
}
\arguments{
\item{measure}{character: measure to be loaded}

\item{owner}{character: Github repo owner. Default is
\code{getOption("pipfun.ghowner")}}

\item{repo}{character: name of the repo}

\item{new_release}{character: date in the form "\%Y\%m\%d"}

\item{identity}{character: for PIP repos it must be one of \link[=c("PROD", "INT",
"TEST")]{c("PROD", "INT", "TEST")}. For other repos, just leave de default, which is 'PROD'.}

\item{ref_branch}{Character: reference branch from which the new branch will be
created.}

\item{new_branch}{character: name of new branch. Default is
[paste0(new_release, "_", identity\link{1})]}
}
\value{
TRUE if \link{new_branch} already exists or if it was created
}
\description{
By default it will create a new branch in aux PIP repo, but it can create a
new branch in repo
}
\examples{
\dontrun{
# success
  create_new_brach("regions",
  new_release = "20240903")

  create_new_brach("regions",
  new_branch = "test")

# Fail
  create_new_brach("fjfjf",
  new_branch = "test") |>
  try()
}
}
